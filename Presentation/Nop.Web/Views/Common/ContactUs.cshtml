@model ContactUsModel
@using Nop.Services.Hours
@inject IHoursOfOperationService hoursOfOperationService;
@{
    Layout = "_ColumnsOne";

    //title
    Html.AddTitleParts(T("PageTitle.ContactUs").Text);
    //page class
    Html.AppendPageCssClassParts("html-contact-page");
}
<div class="page contact-page">
    <div class="page-title">
        <h1>@T("PageTitle.ContactUs")</h1>
    </div>
   
    <div class="page-body">
        <div class="flex-container contact-content">
            <div>
                @await Component.InvokeAsync("TopicBlock", new { systemName = "ContactUs" })
                @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.ContactUsTop })
                <div class="contact-shophours-title">
                    <strong>@T("Footer.ShopHours")</strong>
                </div>
                <div class="contact-shophours">
                    @foreach (var item in Model.ShopHours)
                    {
                        if (item.Closed)
                        {
                            <p>@item.Weekday: Closed </p>
                        }
                        else
                        {
                            <p>@item.Weekday: @hoursOfOperationService.GetFriendlyTimeById(item.StartHourId) - @hoursOfOperationService.GetFriendlyTimeById(item.EndHourID) </p>

                        }
                    }
                </div>
            </div>
            <div class="contact-map">
                <iframe src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d2833.1541733102836!2d-96.6849232843616!3d44.757270388354065!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x8789e16d76f1e163%3A0x6e473264bfd8e89a!2sAugust%2017th%20Gourmet%20Coffee%20and%20Sandwich%20Shoppe!5e0!3m2!1sen!2sus!4v1590971560555!5m2!1sen!2sus" width="500" height="400" frameborder="0" style="border:0;" allowfullscreen="" aria-hidden="false" tabindex="0"></iframe>
            </div>
            
        </div>
            @if (Model.SuccessfullySent)
            {
                <div class="result">
                    @Model.Result
                </div>
            }
            else
            {
                <form asp-route="ContactUs" method="post">
                    <div asp-validation-summary="ModelOnly" class="message-error"></div>
                    <div class="fieldset">
                        <div class="form-fields">
                            <div class="inputs">
                                <label asp-for="FullName" asp-postfix=":"></label>
                                <input asp-for="FullName" placeholder="@T("ContactUs.FullName.Hint")" class="fullname" />
                                <nop-required />
                                <span asp-validation-for="FullName"></span>
                            </div>
                            <div class="inputs">
                                <label asp-for="Email" asp-postfix=":"></label>
                                <input asp-for="Email" placeholder="@T("ContactUs.Email.Hint")" class="email" />
                                <nop-required />
                                <span asp-validation-for="Email"></span>
                            </div>
                            @if (Model.SubjectEnabled)
                            {
                                <div class="inputs">
                                    <label asp-for="Subject" asp-postfix=":"></label>
                                    <input asp-for="Subject" placeholder="@T("ContactUs.Subject.Hint")" class="subject" />
                                    <nop-required />
                                    <span asp-validation-for="Subject"></span>
                                </div>
                            }
                            <div class="inputs">
                                <label asp-for="Enquiry" asp-postfix=":"></label>
                                <textarea asp-for="Enquiry" placeholder="@T("ContactUs.Enquiry.Hint")" class="enquiry"></textarea>
                                <nop-required />
                                <span asp-validation-for="Enquiry"></span>
                            </div>
                            @if (Model.DisplayCaptcha)
                            {
                                <div class="captcha-box">
                                    <nop-captcha />
                                </div>
                            }
                        </div>
                    </div>
                    <div class="buttons">
                        <input type="submit" name="send-email" class="button-1 contact-us-button" value="@T("ContactUs.Button")" />
                    </div>
                </form>
            }
            @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.ContactUsBottom })
    </div>
</div>
